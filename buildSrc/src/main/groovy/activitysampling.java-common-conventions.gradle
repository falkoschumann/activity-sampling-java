import java.time.LocalDate

plugins {
  id 'activitysampling.groovy-gradle-conventions'
  id 'jacoco'
  id 'java'
  id 'jvm-test-suite'
  id 'com.diffplug.spotless'
  id 'io.freefair.lombok'
}

version = rootProject.version

ext {
  copyrightYear = LocalDate.now().year
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
  testImplementation 'org.mockito:mockito-core:4.9.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.9.0'
}

java {
  sourceCompatibility = 17
  targetCompatibility = 17
}

compileJava {
  options.release = 17
  options.encoding = 'UTF-8'
}

tasks {
  processResources {
    filesMatching('**/*.properties') {
      expand([version: version, copyrightYear: copyrightYear])
    }
  }
}

compileTestJava {
  options.release = 17
  options.encoding = 'UTF-8'
}

test {
  systemProperty 'user.country', 'DE'
  systemProperty 'user.language', 'de'
  systemProperty 'user.timezone', 'Europe/Berlin'
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
    showExceptions = true
    exceptionFormat = 'full'
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
}

spotless {
  java {
    googleJavaFormat()
    licenseHeaderFile 'config/LicenseHeader.txt'
  }
}
